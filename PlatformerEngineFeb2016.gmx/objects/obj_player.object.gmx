<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_16x16Block</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>maxRunSpeed = 5; //the maximum runspeed
maxFallSpeed = 5; //the terminal velocity
jumpSpeed = 5; //the speed that you jump
runAccel = .5;

keyboard_set_map(ord('w'), vk_up);
keyboard_set_map(ord('a'), vk_left);
keyboard_set_map(ord('s'), vk_down);
keyboard_set_map(ord('d'), vk_right);
/*
keyboard_set_map(vk_up, ord('w'));
keyboard_set_map(vk_left, ord('a'));
keyboard_set_map(vk_down, ord('s'));
keyboard_set_map(vk_right, ord('d'));
*/
sFriction = 0.85;
sGravity = .25;
yVel = 0;
xVel = 0;

inAir = true;
inMotion = false;

enum facing {
    left = -1,
    neutral = 0,
    right = 1
}
/*face:
    -1 = left
    0 = neither
    1 = right
*/


/*
How to make a platformer:
    1. Just do it

Notes:
    1. for physics:
        a. velocity then position
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xproportion = 1;

/*velocities first*/

/*RUNNING F YEAH!!!*/

if (!inAir) {
    if (keyboard_check(vk_left) ){
        xVel-=runAccel;
    }
    if (keyboard_check(vk_right)){
        xVel+=runAccel;
    }
    xVel*=sFriction;
}

/*GRAVITY FALLING CODE*/

if (yVel &lt; maxFallSpeed) {
    if (yVel+sGravity &lt; maxFallSpeed) {
        yVel += sGravity;
    } else {
        yVel = maxFallSpeed
    }
}


/*JUMPING CODE YEAH HRRNGH BIG BUTTS*/

if ((!inAir) and (keyboard_check_pressed(vk_space))) {
    yVel = -jumpSpeed;
    inAir = true;
}

/*then positions*/
if (place_meeting(x,y+yVel,obj_block) == false) {
    y+=yVel;
} else {
    /*for (i = 0; i &lt;= floor(yVel)+1; i++) {
        if (place_meeting(x,y+i,obj_block)==true) {
            y += i;
            inAir = false;
            //yVel = 0;//this resets velocity to 0, otherwise if you fall off a block, you will fall at the speed you were falling when you landed. -E
            break;
        }
    }*/
    yprev = y;
    move_contact_all(270,yVel);
    inAir = false;
    // the x proportion that you have left to move, that needs to be influenced by friction
    xproportion = (1-sqr(y-yprev)/(sqr(yVel) + sqr(xVel)));
    yVel = 0;
}


xVel *= xproportion;

if (!place_meeting(x+xVel,y-1,obj_block)) {
    //if there is no block at x+xVel
    x+=xVel;
    //move to x+xVel
} else {
    move_contact_all(point_direction(x,y,x+xVel,y), abs(xVel));
    move_outside_all(point_direction(x,y,x-xVel,y), abs(xVel)+10);
    xVel = 0;
}

if (x-xprevious &lt; 0.0000005) {
    inMotion = false;
} else {
    inMotion = true;
}
//optimization
//inMotion = !(x-xprevious &lt; 0.000005)

/*
x = x mod room_width;
y = y mod room_height;
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = xstart;
y = ystart;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index, image_index,x,y);
//draw_text(x,y-10,xVel);
messages = ds_list_create();
ds_list_add(messages,
           "xVel is " + string(xVel),
           "inAir is" + string(inAir),
           "x is " + string(x),
           "y is " + string(y),
           "!pm(blah on ground)" + string(!place_meeting(x+xVel,y,obj_block)));
size = ds_list_size(messages);

for (var i = 0; i&lt;size; i++) {
    draw_text(64,10*(i+1),messages[| i]);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
